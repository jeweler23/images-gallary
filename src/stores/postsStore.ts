import { computed, ref } from 'vue';
import { defineStore } from 'pinia';

export const usePostsStore = defineStore('posts', () => {
  const postsArray = ref([{
    title: 'Вдохновение в каждом шаге',
    description: 'Каждое утро, когда я просыпаюсь в палатке, окружённой лесом и горами, я чувствую, как природа наполняет меня энергией. Величественные вершины, покрытые зелёными лесами, напоминают мне о том, как важно сохранять связь с природой. Каждый шаг по тропе — это не просто движение вперёд, это путешествие внутрь себя, где я нахожу вдохновение и силу. В такие моменты я понимаю, что настоящая красота мира скрыта в его простоте и величии.',
    subtitle: 'Наши путешественники находят вдохновение в каждом шаге своего пути.',
    image: 'asd',
    tags: ['Люди', 'Природа'],
    create_date_post: '9 апр', // скорее всего будет приходить в другом формате
    timeRead: 2,
    comments: [{
      author: 'Мария Гусева',
      description: 'Эти мгновения наполняют наши сердца радостью и любовью.',
      create_date_comment: '9.04.2024 в 14:54',
    }],
  }, {
    title: 'Вдохновение в каждом шаге',
    description: 'Каждое утро, когда я просыпаюсь в палатке, окружённой лесом и горами, я чувствую, как природа наполняет меня энергией. Величественные вершины, покрытые зелёными лесами, напоминают мне о том, как важно сохранять связь с природой. Каждый шаг по тропе — это не просто движение вперёд, это путешествие внутрь себя, где я нахожу вдохновение и силу. В такие моменты я понимаю, что настоящая красота мира скрыта в его простоте и величии.',
    subtitle: 'Наши путешественники находят вдохновение в каждом шаге своего пути.',
    image: 'asd',
    tags: ['Люди', 'Природа'],
    create_date_post: '9 апр', // скорее всего будет приходить в другом формате
    timeRead: 2,
    comments: [{
      author: 'Мария Гусева',
      description: 'Эти мгновения наполняют наши сердца радостью и любовью.',
      create_date_comment: '9.04.2024 в 14:54',
    }],
  }]);

  const allTags = computed(() => {
    if (postsArray.value.length > 0) {
      const tags: string[] = [];
      postsArray.value.forEach((item) => {
        tags.push(...item.tags);
      });

      return tags.filter((tag, index) => index === tags.lastIndexOf(tag));
    }
    return [];
  });

  return { postsArray, allTags };
});
